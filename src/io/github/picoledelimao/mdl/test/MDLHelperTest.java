package io.github.picoledelimao.mdl.test;

import java.lang.reflect.InvocationTargetException;

import org.junit.Assert;
import org.junit.Test;

import io.github.picoledelimao.mdl.MDLHelper;
import io.github.picoledelimao.mdl.core.MDLNotFoundException;
import io.github.picoledelimao.mdl.core.MDLParserErrorException;

public class MDLHelperTest {

	@Test
	public void test() throws InstantiationException, IllegalAccessException, IllegalArgumentException, InvocationTargetException, NoSuchMethodException, SecurityException, MDLNotFoundException, MDLParserErrorException {
		String s1 = "Helper \"Origin\" {\n\tObjectId 18,\n\tTranslation 1 {\n\t\tDontInterp,\n\t\t0: { 0, 0, 0 },\n\t}\n\tRotation 1 {\n\t\tDontInterp,\n\t\t0: { 0, 0, 0, 1 },\n\t}\n\tScaling 1 {\n\t\tDontInterp,\n\t\t0: { 1, 1, 1 },\n\t}\n}\n";
		MDLHelper helper1 = new MDLHelper();
		helper1.parse(s1);
		Assert.assertEquals(s1, helper1.toMDL());
		String s2 = "Helper \"bone_ChestR\" {\n\tObjectId 20,\n\tParent 14,\n\tRotation 46 {\n\t\tLinear,\n\t\t0: { 0, 0, 0, 1 },\n\t\t100: { -0.0454102, -0.0476074, -0.130859, 0.988281 },\n\t\t850: { -0.12793, -0.111816, -0.1875, 0.964844 },\n\t\t1600: { -0.0454102, -0.0476074, -0.130859, 0.988281 },\n\t\t2000: { -0.0595703, -0.036377, -0.081543, 0.992188 },\n\t\t2166: { -0.0942383, -0.0220947, -0.10791, 0.988281 },\n\t\t2333: { -0.139648, 0.0253906, 0.0175781, 0.988281 },\n\t\t2500: { -0.199219, 0.0549316, 0.0588379, 0.972656 },\n\t\t2666: { -0.105469, 0.0228271, -0.0466309, 0.992188 },\n\t\t2800: { -0.105957, -0.0187988, -0.0922852, 0.988281 },\n\t\t3000: { -0.0595703, -0.036377, -0.081543, 0.992188 },\n\t\t4000: { -0.00769043, -0.0222168, -0.259766, 0.964844 },\n\t\t4165: { -0.00775146, -0.0223389, -0.259766, 0.964844 },\n\t\t4247: { -0.00775146, -0.0223389, -0.259766, 0.964844 },\n\t\t4396: { -0.0183105, -0.0288086, -0.236328, 0.96875 },\n\t\t4481: { -0.222656, -0.151367, 0.263672, 0.921875 },\n\t\t4574: { -0.208984, -0.146484, 0.233398, 0.9375 },\n\t\t5000: { -0.00769043, -0.0222168, -0.259766, 0.964844 },\n\t\t5100: { -0.00769043, -0.0222168, -0.259766, 0.964844 },\n\t\t5850: { -0.0585938, -0.0527344, -0.273438, 0.957031 },\n\t\t6600: { -0.00769043, -0.0222168, -0.259766, 0.964844 },\n\t\t7000: { -0.0454102, -0.0476074, -0.130859, 0.988281 },\n\t\t7217: { -0.0947266, -0.0693359, 0.00228882, 0.992188 },\n\t\t7500: { -0.189453, -0.0639648, 0.00315857, 0.976563 },\n\t\t7548: { -0.207031, -0.0625, 0.00332642, 0.972656 },\n\t\t7575: { -0.186523, -0.0639648, 0.00312805, 0.976563 },\n\t\t7607: { -0.171875, -0.0649414, 0.00300598, 0.980469 },\n\t\t7801: { -0.1875, -0.0649414, 0.00209045, 0.976563 },\n\t\t7858: { -0.1875, -0.0649414, 0.00209045, 0.976563 },\n\t\t7901: { -0.0878906, -0.0712891, 0.0620117, 0.988281 },\n\t\t8000: { -0.0878906, -0.0712891, 0.0620117, 0.988281 },\n\t\t8100: { -0.0454102, -0.0476074, -0.130859, 0.988281 },\n\t\t8326: { -0.0454102, -0.0476074, -0.130859, 0.988281 },\n\t\t8566: { -0.0454102, -0.0476074, -0.130859, 0.988281 },\n\t\t8764: { -0.0454102, -0.0476074, -0.130859, 0.988281 },\n\t\t8886: { -0.0356445, -0.0517578, -0.000591278, 0.996094 },\n\t\t8992: { -0.0289307, -0.0539551, 0.0834961, 0.992188 },\n\t\t9100: { -0.0238037, -0.0551758, 0.145508, 0.984375 },\n\t\t9200: { -0.00769043, -0.0222168, -0.259766, 0.964844 },\n\t\t9442: { -0.00769043, -0.0222168, -0.259766, 0.964844 },\n\t\t9579: { -0.00769043, -0.0222168, -0.259766, 0.964844 },\n\t\t9600: { -0.00769043, -0.0222168, -0.259766, 0.964844 },\n\t\t9675: { -0.0020752, -0.0332031, -0.316406, 0.945313 },\n\t\t9747: { 0.00331116, -0.0437012, -0.373047, 0.925781 },\n\t\t9867: { 0.00331116, -0.0437012, -0.373047, 0.925781 },\n\t\t10200: { -0.00769043, -0.0222168, -0.259766, 0.964844 },\n\t}\n}\n";
		MDLHelper helper2 = new MDLHelper();
		helper2.parse(s2);
		Assert.assertEquals(s2, helper2.toMDL());
	}

}
