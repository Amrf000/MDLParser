package io.github.picoledelimao.mdl.test;

import org.junit.Assert;
import org.junit.Test;

import io.github.picoledelimao.mdl.MDLSequences;

public class MDLSequencesTest {

	@Test
	public void test() throws NoSuchMethodException, SecurityException {
		String sequence1 = "Sequences 13 {\n\tAnim \"Stand - 1\" {\n\t\tInterval { 3333, 6667 },\n\t\tMinimumExtent { -154.372, -145.345, -41.5714 },\n\t\tMaximumExtent { 135.577, 144.604, 118.823 },\n\t\tBoundsRadius 207.343,\n\t}\n\tAnim \"Stand First\" {\n\t\tInterval { 10000, 16667 },\n\t\tRarity 5,\n\t\tMinimumExtent { -154.372, -145.345, -50.8508 },\n\t\tMaximumExtent { 135.577, 144.604, 129.42 },\n\t\tBoundsRadius 207.442,\n\t}\n\tAnim \"Stand Second\" {\n\t\tInterval { 20000, 26667 },\n\t\tRarity 6,\n\t\tMinimumExtent { -154.372, -145.345, -58.5597 },\n\t\tMaximumExtent { 135.577, 144.604, 187.532 },\n\t\tBoundsRadius 212.742,\n\t}\n\tAnim \"Stand Ready\" {\n\t\tInterval { 30000, 31000 },\n\t\tMinimumExtent { -162.5, -143.208, -29.7471 },\n\t\tMaximumExtent { 133.44, 142.467, 104.669 },\n\t\tBoundsRadius 210.441,\n\t}\n\tAnim \"Attack - 1\" {\n\t\tInterval { 33333, 34333 },\n\t\tNonLooping,\n\t\tMinimumExtent { -161.692, -145.092, -39.2506 },\n\t\tMaximumExtent { 167.024, 144.35, 160.411 },\n\t\tBoundsRadius 220.168,\n\t}\n\tAnim \"Attack - 2\" {\n\t\tInterval { 36667, 37833 },\n\t\tNonLooping,\n\t\tMinimumExtent { -175.945, -147.584, -67.5383 },\n\t\tMaximumExtent { 172.425, 144.604, 217.012 },\n\t\tBoundsRadius 221.646,\n\t}\n\tAnim \"Death\" {\n\t\tInterval { 40000, 41500 },\n\t\tNonLooping,\n\t\tMinimumExtent { -154.372, -145.345, -73.0451 },\n\t\tMaximumExtent { 135.577, 172.391, 186.321 },\n\t\tBoundsRadius 220.569,\n\t}\n\tAnim \"Stand Victory\" {\n\t\tInterval { 46667, 49333 },\n\t\tMinimumExtent { -154.372, -145.345, -1.06609 },\n\t\tMaximumExtent { 135.577, 144.604, 199.406 },\n\t\tBoundsRadius 224.501,\n\t}\n\tAnim \"Spell\" {\n\t\tInterval { 53333, 55500 },\n\t\tNonLooping,\n\t\tMinimumExtent { -154.372, -145.345, -40.0393 },\n\t\tMaximumExtent { 135.577, 144.604, 238.33 },\n\t\tBoundsRadius 224.491,\n\t}\n\tAnim \"Stand Channel\" {\n\t\tInterval { 60000, 61667 },\n\t\tMinimumExtent { -154.372, -145.345, -0.62305 },\n\t\tMaximumExtent { 135.577, 144.604, 239.487 },\n\t\tBoundsRadius 233.49,\n\t}\n\tAnim \"Stand Hit\" {\n\t\tInterval { 66667, 67167 },\n\t\tNonLooping,\n\t\tMinimumExtent { -172.083, -141.673, -25.705 },\n\t\tMaximumExtent { 131.905, 140.932, 122.483 },\n\t\tBoundsRadius 216.574,\n\t}\n\tAnim \"Dissipate\" {\n\t\tInterval { 73333, 75333 },\n\t\tNonLooping,\n\t\tMinimumExtent { -154.372, -145.345, -66.6171 },\n\t\tMaximumExtent { 135.577, 175.079, 553.363 },\n\t\tBoundsRadius 324.988,\n\t}\n\tAnim \"Walk\" {\n\t\tInterval { 126667, 127433 },\n\t\tMoveSpeed 250,\n\t\tMinimumExtent { -152.235, -143.208, -31.0483 },\n\t\tMaximumExtent { 144.95, 142.467, 153.409 },\n\t\tBoundsRadius 214.518,\n\t}\n}\n";
		MDLSequences s1 = new MDLSequences();
		try {
			s1.parse(sequence1);
		} catch (Exception e) {
			Assert.fail(e.getMessage());
		}
		Assert.assertEquals(sequence1, s1.toMDL());
		Assert.assertEquals(13, s1.getObjects().size(), 0);
		s1.getObjects().add(s1.getObjects().get(0));
		String sequence2 = "Sequences 14 {\n\tAnim \"Stand - 1\" {\n\t\tInterval { 3333, 6667 },\n\t\tMinimumExtent { -154.372, -145.345, -41.5714 },\n\t\tMaximumExtent { 135.577, 144.604, 118.823 },\n\t\tBoundsRadius 207.343,\n\t}\n\tAnim \"Stand First\" {\n\t\tInterval { 10000, 16667 },\n\t\tRarity 5,\n\t\tMinimumExtent { -154.372, -145.345, -50.8508 },\n\t\tMaximumExtent { 135.577, 144.604, 129.42 },\n\t\tBoundsRadius 207.442,\n\t}\n\tAnim \"Stand Second\" {\n\t\tInterval { 20000, 26667 },\n\t\tRarity 6,\n\t\tMinimumExtent { -154.372, -145.345, -58.5597 },\n\t\tMaximumExtent { 135.577, 144.604, 187.532 },\n\t\tBoundsRadius 212.742,\n\t}\n\tAnim \"Stand Ready\" {\n\t\tInterval { 30000, 31000 },\n\t\tMinimumExtent { -162.5, -143.208, -29.7471 },\n\t\tMaximumExtent { 133.44, 142.467, 104.669 },\n\t\tBoundsRadius 210.441,\n\t}\n\tAnim \"Attack - 1\" {\n\t\tInterval { 33333, 34333 },\n\t\tNonLooping,\n\t\tMinimumExtent { -161.692, -145.092, -39.2506 },\n\t\tMaximumExtent { 167.024, 144.35, 160.411 },\n\t\tBoundsRadius 220.168,\n\t}\n\tAnim \"Attack - 2\" {\n\t\tInterval { 36667, 37833 },\n\t\tNonLooping,\n\t\tMinimumExtent { -175.945, -147.584, -67.5383 },\n\t\tMaximumExtent { 172.425, 144.604, 217.012 },\n\t\tBoundsRadius 221.646,\n\t}\n\tAnim \"Death\" {\n\t\tInterval { 40000, 41500 },\n\t\tNonLooping,\n\t\tMinimumExtent { -154.372, -145.345, -73.0451 },\n\t\tMaximumExtent { 135.577, 172.391, 186.321 },\n\t\tBoundsRadius 220.569,\n\t}\n\tAnim \"Stand Victory\" {\n\t\tInterval { 46667, 49333 },\n\t\tMinimumExtent { -154.372, -145.345, -1.06609 },\n\t\tMaximumExtent { 135.577, 144.604, 199.406 },\n\t\tBoundsRadius 224.501,\n\t}\n\tAnim \"Spell\" {\n\t\tInterval { 53333, 55500 },\n\t\tNonLooping,\n\t\tMinimumExtent { -154.372, -145.345, -40.0393 },\n\t\tMaximumExtent { 135.577, 144.604, 238.33 },\n\t\tBoundsRadius 224.491,\n\t}\n\tAnim \"Stand Channel\" {\n\t\tInterval { 60000, 61667 },\n\t\tMinimumExtent { -154.372, -145.345, -0.62305 },\n\t\tMaximumExtent { 135.577, 144.604, 239.487 },\n\t\tBoundsRadius 233.49,\n\t}\n\tAnim \"Stand Hit\" {\n\t\tInterval { 66667, 67167 },\n\t\tNonLooping,\n\t\tMinimumExtent { -172.083, -141.673, -25.705 },\n\t\tMaximumExtent { 131.905, 140.932, 122.483 },\n\t\tBoundsRadius 216.574,\n\t}\n\tAnim \"Dissipate\" {\n\t\tInterval { 73333, 75333 },\n\t\tNonLooping,\n\t\tMinimumExtent { -154.372, -145.345, -66.6171 },\n\t\tMaximumExtent { 135.577, 175.079, 553.363 },\n\t\tBoundsRadius 324.988,\n\t}\n\tAnim \"Walk\" {\n\t\tInterval { 126667, 127433 },\n\t\tMoveSpeed 250,\n\t\tMinimumExtent { -152.235, -143.208, -31.0483 },\n\t\tMaximumExtent { 144.95, 142.467, 153.409 },\n\t\tBoundsRadius 214.518,\n\t}\n\tAnim \"Stand - 1\" {\n\t\tInterval { 3333, 6667 },\n\t\tMinimumExtent { -154.372, -145.345, -41.5714 },\n\t\tMaximumExtent { 135.577, 144.604, 118.823 },\n\t\tBoundsRadius 207.343,\n\t}\n}\n";
		Assert.assertEquals(sequence2, s1.toMDL());
		s1.setShowQuantity(false);
		String sequence3 = "Sequences {\n\tAnim \"Stand - 1\" {\n\t\tInterval { 3333, 6667 },\n\t\tMinimumExtent { -154.372, -145.345, -41.5714 },\n\t\tMaximumExtent { 135.577, 144.604, 118.823 },\n\t\tBoundsRadius 207.343,\n\t}\n\tAnim \"Stand First\" {\n\t\tInterval { 10000, 16667 },\n\t\tRarity 5,\n\t\tMinimumExtent { -154.372, -145.345, -50.8508 },\n\t\tMaximumExtent { 135.577, 144.604, 129.42 },\n\t\tBoundsRadius 207.442,\n\t}\n\tAnim \"Stand Second\" {\n\t\tInterval { 20000, 26667 },\n\t\tRarity 6,\n\t\tMinimumExtent { -154.372, -145.345, -58.5597 },\n\t\tMaximumExtent { 135.577, 144.604, 187.532 },\n\t\tBoundsRadius 212.742,\n\t}\n\tAnim \"Stand Ready\" {\n\t\tInterval { 30000, 31000 },\n\t\tMinimumExtent { -162.5, -143.208, -29.7471 },\n\t\tMaximumExtent { 133.44, 142.467, 104.669 },\n\t\tBoundsRadius 210.441,\n\t}\n\tAnim \"Attack - 1\" {\n\t\tInterval { 33333, 34333 },\n\t\tNonLooping,\n\t\tMinimumExtent { -161.692, -145.092, -39.2506 },\n\t\tMaximumExtent { 167.024, 144.35, 160.411 },\n\t\tBoundsRadius 220.168,\n\t}\n\tAnim \"Attack - 2\" {\n\t\tInterval { 36667, 37833 },\n\t\tNonLooping,\n\t\tMinimumExtent { -175.945, -147.584, -67.5383 },\n\t\tMaximumExtent { 172.425, 144.604, 217.012 },\n\t\tBoundsRadius 221.646,\n\t}\n\tAnim \"Death\" {\n\t\tInterval { 40000, 41500 },\n\t\tNonLooping,\n\t\tMinimumExtent { -154.372, -145.345, -73.0451 },\n\t\tMaximumExtent { 135.577, 172.391, 186.321 },\n\t\tBoundsRadius 220.569,\n\t}\n\tAnim \"Stand Victory\" {\n\t\tInterval { 46667, 49333 },\n\t\tMinimumExtent { -154.372, -145.345, -1.06609 },\n\t\tMaximumExtent { 135.577, 144.604, 199.406 },\n\t\tBoundsRadius 224.501,\n\t}\n\tAnim \"Spell\" {\n\t\tInterval { 53333, 55500 },\n\t\tNonLooping,\n\t\tMinimumExtent { -154.372, -145.345, -40.0393 },\n\t\tMaximumExtent { 135.577, 144.604, 238.33 },\n\t\tBoundsRadius 224.491,\n\t}\n\tAnim \"Stand Channel\" {\n\t\tInterval { 60000, 61667 },\n\t\tMinimumExtent { -154.372, -145.345, -0.62305 },\n\t\tMaximumExtent { 135.577, 144.604, 239.487 },\n\t\tBoundsRadius 233.49,\n\t}\n\tAnim \"Stand Hit\" {\n\t\tInterval { 66667, 67167 },\n\t\tNonLooping,\n\t\tMinimumExtent { -172.083, -141.673, -25.705 },\n\t\tMaximumExtent { 131.905, 140.932, 122.483 },\n\t\tBoundsRadius 216.574,\n\t}\n\tAnim \"Dissipate\" {\n\t\tInterval { 73333, 75333 },\n\t\tNonLooping,\n\t\tMinimumExtent { -154.372, -145.345, -66.6171 },\n\t\tMaximumExtent { 135.577, 175.079, 553.363 },\n\t\tBoundsRadius 324.988,\n\t}\n\tAnim \"Walk\" {\n\t\tInterval { 126667, 127433 },\n\t\tMoveSpeed 250,\n\t\tMinimumExtent { -152.235, -143.208, -31.0483 },\n\t\tMaximumExtent { 144.95, 142.467, 153.409 },\n\t\tBoundsRadius 214.518,\n\t}\n\tAnim \"Stand - 1\" {\n\t\tInterval { 3333, 6667 },\n\t\tMinimumExtent { -154.372, -145.345, -41.5714 },\n\t\tMaximumExtent { 135.577, 144.604, 118.823 },\n\t\tBoundsRadius 207.343,\n\t}\n}\n";
		Assert.assertEquals(sequence3, s1.toMDL());
		String sequence4 = "Sequences 0 {\n}\n";
		s1.setShowQuantity(true);
		try {
			s1.parse(sequence4);
		} catch (Exception e) {
			Assert.fail(e.getMessage());
		}
		Assert.assertEquals(sequence4, s1.toMDL());
		Assert.assertTrue(s1.getObjects().isEmpty());
		String sequence5 = "";
		try {
			s1.parse(sequence5);
		} catch (Exception e) {
			Assert.fail(e.getMessage());
		}
		Assert.assertEquals(sequence4, s1.toMDL());
	}

}
